{"version":3,"sources":["components/Header.js","components/API.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","api","baseURL","headers","this","_baseURL","_headers","fetch","then","res","ok","json","Promise","reject","status","statusText","catch","err","console","log","name","about","method","body","JSON","stringify","avatar","link","_id","authorization","Card","props","key","card","id","style","backgroundImage","image","onClick","onCard","aria-label","onDeleteCard","title","likes","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","job","getCardList","map","length","onEditAvatar","onEditProfile","onAddCard","Footer","PopupWithForm","isOpen","action","onClose","children","button","type","PopupWithImage","App","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","selectedCard","setSelectedCard","isImagePopupOpen","setIsImagePopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","closeAllPopups","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4273fa2c.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        <header className='header'>\n          <img src={logo} alt='Around The U.S. text logo' className='logo' />\n        </header>\n    </div>\n    );\n}\n\nexport default Header;","class API {\n    constructor({baseURL, headers}) {\n      this._baseURL = baseURL;\n      this._headers = headers;\n    }\n  \n    getUserInfo() {\n      return fetch(this._baseURL + '/users/me', {\n        headers: this._headers\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    setUserInfo(name, about) {\n      return fetch(this._baseURL + '/users/me', {\n        headers: this._headers,\n        method: \"PATCH\",\n        body: JSON.stringify({\n          name,\n          about\n        })\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    setUserAvatar(avatar) {\n      return fetch(this._baseURL + '/users/me/avatar', {\n        headers: this._headers,\n        method: \"PATCH\",\n        body: JSON.stringify({\n          avatar\n        })\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    getCardList() {\n      return fetch(this._baseURL + '/cards', {\n        headers: this._headers\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    addCard({name, link}) {\n      return fetch(this._baseURL + '/cards', {\n        headers: this._headers,\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          link: link\n        })\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    removeCard(_id) {\n      return fetch(this._baseURL + '/cards/' + _id, {\n        headers: this._headers,\n        method: \"DELETE\"\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    addCardLike(_id) {\n      return fetch(this._baseURL + '/cards/likes/' + _id, {\n        headers: this._headers,\n        method: \"PUT\",\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  \n    removeCardLike(_id) {\n      return fetch(this._baseURL + '/cards/likes/' + _id, {\n        headers: this._headers,\n        method: \"DELETE\",\n      })\n      .then(res => res.ok ? res.json() : Promise.reject(res.status + ' Error: ' + res.statusText))\n      .catch(err => console.log(err))\n    };\n  }\n\n  const api = new API({\n    baseURL: \"https://around.nomoreparties.co/v1/group-3\",\n    headers: {\n      authorization: \"bfb84dd3-54e8-4642-a5bf-7fe819e5fd4b\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  \n  export {api};","import React from 'react';\n\nfunction Card(props) {\n    function handleCardClick() {\n        props.onCard(props.card);\n    }\n\n    return(\n        <li className='photo-grid__item' key={props.card.id}>\n            <div className='photo-grid__image' style={{backgroundImage:`url(${props.image})`}} onClick={handleCardClick}></div>\n            <button className='trash-button' aria-label='Delete Card' onClick={props.onDeleteCard}></button>\n            <div className='photo-grid__description'>\n                <h3 className='photo-grid__label'>{props.title}</h3>\n                <div className='photo-grid__likes'>\n                    <button className='like-button' aria-label='Like Card'></button>\n                    <p className='photo-grid__likes-count'>{props.likes}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport {api} from './API.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState(\"Name Placeholder\");\n  const [userDescription, setUserDescription] = React.useState(\"Description Placeholder\");\n  const [userAvatar, setUserAvatar] = React.useState(\"(.././images/blackheart.svg)\");\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then(res => {\n      setUserName(res.name);\n      setUserDescription(res.job);\n      setUserAvatar(res.avatar);\n    });\n\n    api.getCardList()\n    .then(res => {\n      setCards(res.map(card => ({\n        key: card._id,\n        title: card.name,\n        image: card.link,\n        likes: card.likes.length\n      })));\n    })\n\n  }, [])\n\n  console.log(cards);\n\n  return (\n    <main className='content'>\n      <section className='profile'>\n        <div className='profile__avatar'>\n          <img src={userAvatar} alt='Profile avatar' className='avatar avatar_profile'/>\n          <div className='avatar__edit-overlay'>\n            <button className='edit-button edit-button_avatar' aria-label=\"Edit Avatar\" onClick={props.onEditAvatar}></button>\n          </div>\n        </div>\n        <div className='profile__info'>\n          <h1 className='profile__name'>{userName}</h1>\n          <button className='edit-button edit-button_profile' aria-label='Edit Profile' onClick={props.onEditProfile}></button>\n          <p className='profile__occupation'>{userDescription}</p>\n        </div>\n        <button className='add-button' aria-label='Add Card' onClick={props.onAddCard}></button>\n      </section>\n\n      <section className='photo-grid'>\n        <ul className='photo-grid__list'>\n          {cards.map((card) => <Card\n            key={card.id}\n            title={card.title}\n            image={card.image}\n            likes={card.likes}\n            card={card}\n            onCard={props.onCard}\n            onDeleteCard={props.onDeleteCard}\n            />)\n          }\n        </ul>\n      </section>\n    </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <div className='Footer'>\n        <footer className='footer'>\n          <p>&copy; 2020 Around The U.S.</p>\n        </footer>\n    </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <div>\n            <section className={props.isOpen ? `popup popup_type_${props.name} popup_opened` : `popup popup_type_${props.name}`}>\n            <div className='popup__container popup__container_type_form'>\n              <button className='close-button' aria-label={`Close ${props.action} Popup`} onClick={props.onClose}></button>\n              <h2 className='popup__title'>{props.title}</h2>\n              <form className={`popup__form popup__form_type_${props.name}`}>\n                {props.children}\n                <button className={`popup__button ${props.button}-button`} type='submit' aria-label={`${props.action}`} onClick={props.onClose}></button>\n              </form>\n            </div>\n          </section>\n        </div>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction PopupWithImage(props) {\n    return (\n        <div>\n            <section className={props.isOpen ? 'popup popup_type_image popup_opened' : 'popup popup_type_image'}>\n                <div className='popup__container popup__container_type_image'>\n                <figure className='figure'>\n                    <button className='close-button' aria-label='Close Image Popup' onClick={props.onClose}></button>\n                    <img className='popup__image' alt={props.card.title} src={props.card.image}/>\n                    <figcaption className='popup__caption'>{props.card.title}</figcaption>\n                </figure>\n                </div>\n            </section>\n        </div>\n    );\n}\n\nexport default PopupWithImage;","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport PopupWithImage from './PopupWithImage.js';\nimport '../index.css';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  }\n\n  function handleDeleteCardClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <body className='page'>\n        <Header />\n        <Main \n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddCard={handleAddCardClick}\n          onCard={handleCardClick}\n          onDeleteCard={handleDeleteCardClick}\n          selectedCard={selectedCard}\n        ></Main>\n        <PopupWithForm name='edit-avatar' action='Edit Avatar' title='Change profile picture' button='save' onClose={closeAllPopups} isOpen={isEditAvatarPopupOpen}>\n                <input name='avatar' id='avatar-url' className='popup__input popup__input_type_url' type='url' placeholder='Image URL' required />\n                <span id='avatar-url-error' className='popup__error'></span>\n        </PopupWithForm>\n        <PopupWithForm name='edit-profile' action='Edit Profile' title='Edit profile' button='save' onClose={closeAllPopups} isOpen={isEditProfilePopupOpen}>\n                <input name='userName' id='profile-name' className='popup__input popup__input_type_name' type='text' placeholder='Name' required minLength=\"2\" maxLength=\"40\" />\n                <span id='profile-name-error' className='popup__error'></span>\n                <input name='userOccupation' id='profile-occupation' className='popup__input popup__input_type_occupation' type='text' placeholder='About Me' required minLength=\"2\" maxLength=\"200\" />\n                <span id='profile-occupation-error' className='popup__error'></span>\n        </PopupWithForm>\n        <PopupWithForm name='add-card' action='Add Card' title='New Place' button='create' onClose={closeAllPopups} isOpen={isAddCardPopupOpen}>\n        <input name='name' id='card-label' className='popup__input popup__input_type_label' type='text' placeholder='Label' required minLength=\"1\" maxLength=\"30\" />\n        <span id='card-label-error' className='popup__error'></span>\n        <input name='link' id='card-url' className='popup__input popup__input_type_url' type='url' placeholder='Image URL' required />\n        <span id='card-url-error' className='popup__error'></span>\n        </PopupWithForm>\n        <PopupWithImage image='' title='Image Caption' card={selectedCard} onClose={closeAllPopups} isOpen={isImagePopupOpen}/>\n        <PopupWithForm name=\"delete-card\" action='Delete Card' title='Are you sure?' button='yes' onClose={closeAllPopups} isOpen={isDeleteCardPopupOpen}/>\n        <Footer />\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";"],"sourceRoot":""}